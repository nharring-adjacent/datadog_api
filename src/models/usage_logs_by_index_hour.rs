/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// UsageLogsByIndexHour : Number of indexed logs for each hour and index for a given organization.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsageLogsByIndexHour {
    /// The total number of indexed logs for the queried hour.
    #[serde(rename = "event_count", skip_serializing_if = "Option::is_none")]
    pub event_count: Option<i64>,
    /// The hour for the usage.
    #[serde(rename = "hour", skip_serializing_if = "Option::is_none")]
    pub hour: Option<String>,
    /// The index ID for this usage.
    #[serde(rename = "index_id", skip_serializing_if = "Option::is_none")]
    pub index_id: Option<String>,
    /// The user specified name for this index ID.
    #[serde(rename = "index_name", skip_serializing_if = "Option::is_none")]
    pub index_name: Option<String>,
    /// The retention period (in days) for this index ID.
    #[serde(rename = "retention", skip_serializing_if = "Option::is_none")]
    pub retention: Option<i64>,
}

impl UsageLogsByIndexHour {
    /// Number of indexed logs for each hour and index for a given organization.
    pub fn new() -> UsageLogsByIndexHour {
        UsageLogsByIndexHour {
            event_count: None,
            hour: None,
            index_id: None,
            index_name: None,
            retention: None,
        }
    }
}


