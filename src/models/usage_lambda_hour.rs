/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// UsageLambdaHour : Number of lambda functions and sum of the invocations of all lambda functions for each hour for a given organization.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsageLambdaHour {
    /// Contains the number of different functions for each region and AWS account.
    #[serde(rename = "func_count", skip_serializing_if = "Option::is_none")]
    pub func_count: Option<i64>,
    /// The hour for the usage.
    #[serde(rename = "hour", skip_serializing_if = "Option::is_none")]
    pub hour: Option<String>,
    /// Contains the sum of invocations of all functions.
    #[serde(rename = "invocations_sum", skip_serializing_if = "Option::is_none")]
    pub invocations_sum: Option<i64>,
}

impl UsageLambdaHour {
    /// Number of lambda functions and sum of the invocations of all lambda functions for each hour for a given organization.
    pub fn new() -> UsageLambdaHour {
        UsageLambdaHour {
            func_count: None,
            hour: None,
            invocations_sum: None,
        }
    }
}


