/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// GeomapWidgetDefinition : This visualization displays a series of values by country on a world map.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GeomapWidgetDefinition {
    /// A list of custom links.
    #[serde(rename = "custom_links", skip_serializing_if = "Option::is_none")]
    pub custom_links: Option<Vec<crate::models::WidgetCustomLink>>,
    /// Array of one request object to display in the widget. The request must contain a `group-by` tag whose value is a country ISO code.  See the [Request JSON schema documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json) for information about building the `REQUEST_SCHEMA`.
    #[serde(rename = "requests")]
    pub requests: Vec<crate::models::GeomapWidgetRequest>,
    #[serde(rename = "style")]
    pub style: Box<crate::models::GeomapWidgetDefinitionStyle>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<Box<crate::models::WidgetTime>>,
    /// The title of your widget.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "title_align", skip_serializing_if = "Option::is_none")]
    pub title_align: Option<crate::models::WidgetTextAlign>,
    /// The size of the title.
    #[serde(rename = "title_size", skip_serializing_if = "Option::is_none")]
    pub title_size: Option<String>,
    #[serde(rename = "type")]
    pub _type: crate::models::GeomapWidgetDefinitionType,
    #[serde(rename = "view")]
    pub view: Box<crate::models::GeomapWidgetDefinitionView>,
}

impl GeomapWidgetDefinition {
    /// This visualization displays a series of values by country on a world map.
    pub fn new(requests: Vec<crate::models::GeomapWidgetRequest>, style: crate::models::GeomapWidgetDefinitionStyle, _type: crate::models::GeomapWidgetDefinitionType, view: crate::models::GeomapWidgetDefinitionView) -> GeomapWidgetDefinition {
        GeomapWidgetDefinition {
            custom_links: None,
            requests,
            style: Box::new(style),
            time: None,
            title: None,
            title_align: None,
            title_size: None,
            _type,
            view: Box::new(view),
        }
    }
}


