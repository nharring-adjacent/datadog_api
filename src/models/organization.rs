/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// Organization : Create, edit, and manage organizations.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Organization {
    #[serde(rename = "billing", skip_serializing_if = "Option::is_none")]
    pub billing: Option<Box<crate::models::OrganizationBilling>>,
    /// Date of the organization creation.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// Description of the organization.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The name of the new child-organization, limited to 32 characters.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The `public_id` of the organization you are operating within.
    #[serde(rename = "public_id", skip_serializing_if = "Option::is_none")]
    pub public_id: Option<String>,
    #[serde(rename = "settings", skip_serializing_if = "Option::is_none")]
    pub settings: Option<Box<crate::models::OrganizationSettings>>,
    #[serde(rename = "subscription", skip_serializing_if = "Option::is_none")]
    pub subscription: Option<Box<crate::models::OrganizationSubscription>>,
}

impl Organization {
    /// Create, edit, and manage organizations.
    pub fn new() -> Organization {
        Organization {
            billing: None,
            created: None,
            description: None,
            name: None,
            public_id: None,
            settings: None,
            subscription: None,
        }
    }
}


