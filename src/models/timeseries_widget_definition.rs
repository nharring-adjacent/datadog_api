/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// TimeseriesWidgetDefinition : The timeseries visualization allows you to display the evolution of one or more metrics, log events, or Indexed Spans over time.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeseriesWidgetDefinition {
    /// List of custom links.
    #[serde(rename = "custom_links", skip_serializing_if = "Option::is_none")]
    pub custom_links: Option<Vec<crate::models::WidgetCustomLink>>,
    /// List of widget events.
    #[serde(rename = "events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<crate::models::WidgetEvent>>,
    /// Columns displayed in the legend.
    #[serde(rename = "legend_columns", skip_serializing_if = "Option::is_none")]
    pub legend_columns: Option<Vec<crate::models::TimeseriesWidgetLegendColumn>>,
    #[serde(rename = "legend_layout", skip_serializing_if = "Option::is_none")]
    pub legend_layout: Option<crate::models::TimeseriesWidgetLegendLayout>,
    /// Available legend sizes for a widget. Should be one of \"0\", \"2\", \"4\", \"8\", \"16\", or \"auto\".
    #[serde(rename = "legend_size", skip_serializing_if = "Option::is_none")]
    pub legend_size: Option<String>,
    /// List of markers.
    #[serde(rename = "markers", skip_serializing_if = "Option::is_none")]
    pub markers: Option<Vec<crate::models::WidgetMarker>>,
    /// List of timeseries widget requests.
    #[serde(rename = "requests")]
    pub requests: Vec<crate::models::TimeseriesWidgetRequest>,
    #[serde(rename = "right_yaxis", skip_serializing_if = "Option::is_none")]
    pub right_yaxis: Option<Box<crate::models::WidgetAxis>>,
    /// (screenboard only) Show the legend for this widget.
    #[serde(rename = "show_legend", skip_serializing_if = "Option::is_none")]
    pub show_legend: Option<bool>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<Box<crate::models::WidgetTime>>,
    /// Title of your widget.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "title_align", skip_serializing_if = "Option::is_none")]
    pub title_align: Option<crate::models::WidgetTextAlign>,
    /// Size of the title.
    #[serde(rename = "title_size", skip_serializing_if = "Option::is_none")]
    pub title_size: Option<String>,
    #[serde(rename = "type")]
    pub _type: crate::models::TimeseriesWidgetDefinitionType,
    #[serde(rename = "yaxis", skip_serializing_if = "Option::is_none")]
    pub yaxis: Option<Box<crate::models::WidgetAxis>>,
}

impl TimeseriesWidgetDefinition {
    /// The timeseries visualization allows you to display the evolution of one or more metrics, log events, or Indexed Spans over time.
    pub fn new(requests: Vec<crate::models::TimeseriesWidgetRequest>, _type: crate::models::TimeseriesWidgetDefinitionType) -> TimeseriesWidgetDefinition {
        TimeseriesWidgetDefinition {
            custom_links: None,
            events: None,
            legend_columns: None,
            legend_layout: None,
            legend_size: None,
            markers: None,
            requests,
            right_yaxis: None,
            show_legend: None,
            time: None,
            title: None,
            title_align: None,
            title_size: None,
            _type,
            yaxis: None,
        }
    }
}


