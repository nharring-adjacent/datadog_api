/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsApiError : Error returned by the Logs API



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogsApiError {
    /// Code identifying the error
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// Additional error details
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<crate::models::LogsApiError>>,
    /// Error message
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
}

impl LogsApiError {
    /// Error returned by the Logs API
    pub fn new() -> LogsApiError {
        LogsApiError {
            code: None,
            details: None,
            message: None,
        }
    }
}


