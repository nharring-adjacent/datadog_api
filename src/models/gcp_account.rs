/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// GcpAccount : Your Google Cloud Platform Account.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GcpAccount {
    /// Should be `https://www.googleapis.com/oauth2/v1/certs`.
    #[serde(rename = "auth_provider_x509_cert_url", skip_serializing_if = "Option::is_none")]
    pub auth_provider_x509_cert_url: Option<String>,
    /// Should be `https://accounts.google.com/o/oauth2/auth`.
    #[serde(rename = "auth_uri", skip_serializing_if = "Option::is_none")]
    pub auth_uri: Option<String>,
    /// Silence monitors for expected GCE instance shutdowns.
    #[serde(rename = "automute", skip_serializing_if = "Option::is_none")]
    pub automute: Option<bool>,
    /// Your email found in your JSON service account key.
    #[serde(rename = "client_email", skip_serializing_if = "Option::is_none")]
    pub client_email: Option<String>,
    /// Your ID found in your JSON service account key.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// Should be `https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>` where `<CLIENT_EMAIL>` is the email found in your JSON service account key.
    #[serde(rename = "client_x509_cert_url", skip_serializing_if = "Option::is_none")]
    pub client_x509_cert_url: Option<String>,
    /// An array of errors.
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<String>>,
    /// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
    #[serde(rename = "host_filters", skip_serializing_if = "Option::is_none")]
    pub host_filters: Option<String>,
    /// Your private key name found in your JSON service account key.
    #[serde(rename = "private_key", skip_serializing_if = "Option::is_none")]
    pub private_key: Option<String>,
    /// Your private key ID found in your JSON service account key.
    #[serde(rename = "private_key_id", skip_serializing_if = "Option::is_none")]
    pub private_key_id: Option<String>,
    /// Your Google Cloud project ID found in your JSON service account key.
    #[serde(rename = "project_id", skip_serializing_if = "Option::is_none")]
    pub project_id: Option<String>,
    /// Should be `https://accounts.google.com/o/oauth2/token`.
    #[serde(rename = "token_uri", skip_serializing_if = "Option::is_none")]
    pub token_uri: Option<String>,
    /// The value for service_account found in your JSON service account key.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
}

impl GcpAccount {
    /// Your Google Cloud Platform Account.
    pub fn new() -> GcpAccount {
        GcpAccount {
            auth_provider_x509_cert_url: None,
            auth_uri: None,
            automute: None,
            client_email: None,
            client_id: None,
            client_x509_cert_url: None,
            errors: None,
            host_filters: None,
            private_key: None,
            private_key_id: None,
            project_id: None,
            token_uri: None,
            _type: None,
        }
    }
}


