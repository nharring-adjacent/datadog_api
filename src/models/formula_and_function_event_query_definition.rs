/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// FormulaAndFunctionEventQueryDefinition : A formula and functions events query.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FormulaAndFunctionEventQueryDefinition {
    #[serde(rename = "compute")]
    pub compute: Box<crate::models::FormulaAndFunctionEventQueryDefinitionCompute>,
    #[serde(rename = "data_source")]
    pub data_source: crate::models::FormulaAndFunctionEventsDataSource,
    /// Group by options.
    #[serde(rename = "group_by", skip_serializing_if = "Option::is_none")]
    pub group_by: Option<Vec<crate::models::FormulaAndFunctionEventQueryGroupBy>>,
    /// An array of index names to query in the stream. Omit or use `[]` to query all indexes at once.
    #[serde(rename = "indexes", skip_serializing_if = "Option::is_none")]
    pub indexes: Option<Vec<String>>,
    /// Name of the query for use in formulas.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "search", skip_serializing_if = "Option::is_none")]
    pub search: Option<Box<crate::models::FormulaAndFunctionEventQueryDefinitionSearch>>,
}

impl FormulaAndFunctionEventQueryDefinition {
    /// A formula and functions events query.
    pub fn new(compute: crate::models::FormulaAndFunctionEventQueryDefinitionCompute, data_source: crate::models::FormulaAndFunctionEventsDataSource, name: String) -> FormulaAndFunctionEventQueryDefinition {
        FormulaAndFunctionEventQueryDefinition {
            compute: Box::new(compute),
            data_source,
            group_by: None,
            indexes: None,
            name,
            search: None,
        }
    }
}


