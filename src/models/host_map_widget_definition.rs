/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// HostMapWidgetDefinition : The host map widget graphs any metric across your hosts using the same visualization available from the main Host Map page.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HostMapWidgetDefinition {
    /// List of custom links.
    #[serde(rename = "custom_links", skip_serializing_if = "Option::is_none")]
    pub custom_links: Option<Vec<crate::models::WidgetCustomLink>>,
    /// List of tag prefixes to group by.
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<Vec<String>>,
    /// Whether to show the hosts that donâ€™t fit in a group.
    #[serde(rename = "no_group_hosts", skip_serializing_if = "Option::is_none")]
    pub no_group_hosts: Option<bool>,
    /// Whether to show the hosts with no metrics.
    #[serde(rename = "no_metric_hosts", skip_serializing_if = "Option::is_none")]
    pub no_metric_hosts: Option<bool>,
    #[serde(rename = "node_type", skip_serializing_if = "Option::is_none")]
    pub node_type: Option<crate::models::WidgetNodeType>,
    /// Notes on the title.
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<String>,
    #[serde(rename = "requests")]
    pub requests: Box<crate::models::HostMapWidgetDefinitionRequests>,
    /// List of tags used to filter the map.
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<Vec<String>>,
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<Box<crate::models::HostMapWidgetDefinitionStyle>>,
    /// Title of the widget.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "title_align", skip_serializing_if = "Option::is_none")]
    pub title_align: Option<crate::models::WidgetTextAlign>,
    /// Size of the title.
    #[serde(rename = "title_size", skip_serializing_if = "Option::is_none")]
    pub title_size: Option<String>,
    #[serde(rename = "type")]
    pub _type: crate::models::HostMapWidgetDefinitionType,
}

impl HostMapWidgetDefinition {
    /// The host map widget graphs any metric across your hosts using the same visualization available from the main Host Map page.
    pub fn new(requests: crate::models::HostMapWidgetDefinitionRequests, _type: crate::models::HostMapWidgetDefinitionType) -> HostMapWidgetDefinition {
        HostMapWidgetDefinition {
            custom_links: None,
            group: None,
            no_group_hosts: None,
            no_metric_hosts: None,
            node_type: None,
            notes: None,
            requests: Box::new(requests),
            scope: None,
            style: None,
            title: None,
            title_align: None,
            title_size: None,
            _type,
        }
    }
}


