/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// SyntheticsBrowserTestConfig : Configuration object for a Synthetic browser test.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SyntheticsBrowserTestConfig {
    /// Array of assertions used for the test.
    #[serde(rename = "assertions")]
    pub assertions: Vec<crate::models::SyntheticsAssertion>,
    #[serde(rename = "request")]
    pub request: Box<crate::models::SyntheticsTestRequest>,
    /// Cookies to be used for the request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) syntax.
    #[serde(rename = "setCookie", skip_serializing_if = "Option::is_none")]
    pub set_cookie: Option<String>,
    /// Array of variables used for the test steps.
    #[serde(rename = "variables", skip_serializing_if = "Option::is_none")]
    pub variables: Option<Vec<crate::models::SyntheticsBrowserVariable>>,
}

impl SyntheticsBrowserTestConfig {
    /// Configuration object for a Synthetic browser test.
    pub fn new(assertions: Vec<crate::models::SyntheticsAssertion>, request: crate::models::SyntheticsTestRequest) -> SyntheticsBrowserTestConfig {
        SyntheticsBrowserTestConfig {
            assertions,
            request: Box::new(request),
            set_cookie: None,
            variables: None,
        }
    }
}


