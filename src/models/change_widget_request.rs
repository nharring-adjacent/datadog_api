/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// ChangeWidgetRequest : Updated change widget.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChangeWidgetRequest {
    #[serde(rename = "apm_query", skip_serializing_if = "Option::is_none")]
    pub apm_query: Option<Box<crate::models::LogQueryDefinition>>,
    #[serde(rename = "change_type", skip_serializing_if = "Option::is_none")]
    pub change_type: Option<crate::models::WidgetChangeType>,
    #[serde(rename = "compare_to", skip_serializing_if = "Option::is_none")]
    pub compare_to: Option<crate::models::WidgetCompareTo>,
    #[serde(rename = "event_query", skip_serializing_if = "Option::is_none")]
    pub event_query: Option<Box<crate::models::LogQueryDefinition>>,
    /// Whether to show increase as good.
    #[serde(rename = "increase_good", skip_serializing_if = "Option::is_none")]
    pub increase_good: Option<bool>,
    #[serde(rename = "log_query", skip_serializing_if = "Option::is_none")]
    pub log_query: Option<Box<crate::models::LogQueryDefinition>>,
    #[serde(rename = "network_query", skip_serializing_if = "Option::is_none")]
    pub network_query: Option<Box<crate::models::LogQueryDefinition>>,
    #[serde(rename = "order_by", skip_serializing_if = "Option::is_none")]
    pub order_by: Option<crate::models::WidgetOrderBy>,
    #[serde(rename = "order_dir", skip_serializing_if = "Option::is_none")]
    pub order_dir: Option<crate::models::WidgetSort>,
    #[serde(rename = "process_query", skip_serializing_if = "Option::is_none")]
    pub process_query: Option<Box<crate::models::ProcessQueryDefinition>>,
    #[serde(rename = "profile_metrics_query", skip_serializing_if = "Option::is_none")]
    pub profile_metrics_query: Option<Box<crate::models::LogQueryDefinition>>,
    /// Query definition.
    #[serde(rename = "q", skip_serializing_if = "Option::is_none")]
    pub q: Option<String>,
    #[serde(rename = "rum_query", skip_serializing_if = "Option::is_none")]
    pub rum_query: Option<Box<crate::models::LogQueryDefinition>>,
    #[serde(rename = "security_query", skip_serializing_if = "Option::is_none")]
    pub security_query: Option<Box<crate::models::LogQueryDefinition>>,
    /// Whether to show the present value.
    #[serde(rename = "show_present", skip_serializing_if = "Option::is_none")]
    pub show_present: Option<bool>,
}

impl ChangeWidgetRequest {
    /// Updated change widget.
    pub fn new() -> ChangeWidgetRequest {
        ChangeWidgetRequest {
            apm_query: None,
            change_type: None,
            compare_to: None,
            event_query: None,
            increase_good: None,
            log_query: None,
            network_query: None,
            order_by: None,
            order_dir: None,
            process_query: None,
            profile_metrics_query: None,
            q: None,
            rum_query: None,
            security_query: None,
            show_present: None,
        }
    }
}


