/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// UsageHostHour : Number of hosts/containers recorded for each hour for a given organization.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsageHostHour {
    /// Contains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.
    #[serde(rename = "agent_host_count", skip_serializing_if = "Option::is_none")]
    pub agent_host_count: Option<i64>,
    /// Contains the total number of hosts that reported via Alibaba integration (and were NOT running the Datadog Agent).
    #[serde(rename = "alibaba_host_count", skip_serializing_if = "Option::is_none")]
    pub alibaba_host_count: Option<i64>,
    /// Contains the total number of Azure App Services hosts using APM.
    #[serde(rename = "apm_azure_app_service_host_count", skip_serializing_if = "Option::is_none")]
    pub apm_azure_app_service_host_count: Option<i64>,
    /// Shows the total number of hosts using APM during the hour, these are counted as billable (except during trial periods).
    #[serde(rename = "apm_host_count", skip_serializing_if = "Option::is_none")]
    pub apm_host_count: Option<i64>,
    /// Contains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent).
    #[serde(rename = "aws_host_count", skip_serializing_if = "Option::is_none")]
    pub aws_host_count: Option<i64>,
    /// Contains the total number of hosts that reported via Azure integration (and were NOT running the Datadog Agent).
    #[serde(rename = "azure_host_count", skip_serializing_if = "Option::is_none")]
    pub azure_host_count: Option<i64>,
    /// Shows the total number of containers reported by the Docker integration during the hour.
    #[serde(rename = "container_count", skip_serializing_if = "Option::is_none")]
    pub container_count: Option<i64>,
    /// Contains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).
    #[serde(rename = "gcp_host_count", skip_serializing_if = "Option::is_none")]
    pub gcp_host_count: Option<i64>,
    /// Contains the total number of Heroku dynos reported by the Datadog Agent.
    #[serde(rename = "heroku_host_count", skip_serializing_if = "Option::is_none")]
    pub heroku_host_count: Option<i64>,
    /// Contains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of `agent_host_count`, `aws_host_count`, and `gcp_host_count`.
    #[serde(rename = "host_count", skip_serializing_if = "Option::is_none")]
    pub host_count: Option<i64>,
    /// The hour for the usage.
    #[serde(rename = "hour", skip_serializing_if = "Option::is_none")]
    pub hour: Option<String>,
    /// Contains the total number of hosts that reported via the Azure App Services integration (and were NOT running the Datadog Agent).
    #[serde(rename = "infra_azure_app_service", skip_serializing_if = "Option::is_none")]
    pub infra_azure_app_service: Option<i64>,
    /// Contains the total number of hosts reported by Datadog exporter for the OpenTelemetry Collector.
    #[serde(rename = "opentelemetry_host_count", skip_serializing_if = "Option::is_none")]
    pub opentelemetry_host_count: Option<i64>,
    /// Contains the total number of hosts that reported via vSphere integration (and were NOT running the Datadog Agent).
    #[serde(rename = "vsphere_host_count", skip_serializing_if = "Option::is_none")]
    pub vsphere_host_count: Option<i64>,
}

impl UsageHostHour {
    /// Number of hosts/containers recorded for each hour for a given organization.
    pub fn new() -> UsageHostHour {
        UsageHostHour {
            agent_host_count: None,
            alibaba_host_count: None,
            apm_azure_app_service_host_count: None,
            apm_host_count: None,
            aws_host_count: None,
            azure_host_count: None,
            container_count: None,
            gcp_host_count: None,
            heroku_host_count: None,
            host_count: None,
            hour: None,
            infra_azure_app_service: None,
            opentelemetry_host_count: None,
            vsphere_host_count: None,
        }
    }
}


