/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// CancelDowntimesByScopeRequest : Cancel downtimes according to scope.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CancelDowntimesByScopeRequest {
    /// The scope(s) to which the downtime applies. For example, `host:app2`. Provide multiple scopes as a comma-separated list like `env:dev,env:prod`. The resulting downtime applies to sources that matches ALL provided scopes (`env:dev` **AND** `env:prod`).
    #[serde(rename = "scope")]
    pub scope: String,
}

impl CancelDowntimesByScopeRequest {
    /// Cancel downtimes according to scope.
    pub fn new(scope: String) -> CancelDowntimesByScopeRequest {
        CancelDowntimesByScopeRequest {
            scope,
        }
    }
}


