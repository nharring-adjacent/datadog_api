/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// GeomapWidgetRequest : An updated geomap widget.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GeomapWidgetRequest {
    /// List of formulas that operate on queries. **This feature is currently in beta.**
    #[serde(rename = "formulas", skip_serializing_if = "Option::is_none")]
    pub formulas: Option<Vec<crate::models::WidgetFormula>>,
    #[serde(rename = "log_query", skip_serializing_if = "Option::is_none")]
    pub log_query: Option<Box<crate::models::LogQueryDefinition>>,
    /// The widget metrics query.
    #[serde(rename = "q", skip_serializing_if = "Option::is_none")]
    pub q: Option<String>,
    /// List of queries that can be returned directly or used in formulas. **This feature is currently in beta.**
    #[serde(rename = "queries", skip_serializing_if = "Option::is_none")]
    pub queries: Option<Vec<crate::models::FormulaAndFunctionQueryDefinition>>,
    #[serde(rename = "response_format", skip_serializing_if = "Option::is_none")]
    pub response_format: Option<crate::models::FormulaAndFunctionResponseFormat>,
    #[serde(rename = "rum_query", skip_serializing_if = "Option::is_none")]
    pub rum_query: Option<Box<crate::models::LogQueryDefinition>>,
    #[serde(rename = "security_query", skip_serializing_if = "Option::is_none")]
    pub security_query: Option<Box<crate::models::LogQueryDefinition>>,
}

impl GeomapWidgetRequest {
    /// An updated geomap widget.
    pub fn new() -> GeomapWidgetRequest {
        GeomapWidgetRequest {
            formulas: None,
            log_query: None,
            q: None,
            queries: None,
            response_format: None,
            rum_query: None,
            security_query: None,
        }
    }
}


