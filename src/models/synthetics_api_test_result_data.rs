/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// SyntheticsApiTestResultData : Object containing results for your Synthetic API test.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SyntheticsApiTestResultData {
    #[serde(rename = "cert", skip_serializing_if = "Option::is_none")]
    pub cert: Option<Box<crate::models::SyntheticsSslCertificate>>,
    #[serde(rename = "errorCode", skip_serializing_if = "Option::is_none")]
    pub error_code: Option<crate::models::SyntheticsErrorCode>,
    /// The API test error message.
    #[serde(rename = "errorMessage", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    #[serde(rename = "eventType", skip_serializing_if = "Option::is_none")]
    pub event_type: Option<crate::models::SyntheticsTestProcessStatus>,
    /// The API test HTTP status code.
    #[serde(rename = "httpStatusCode", skip_serializing_if = "Option::is_none")]
    pub http_status_code: Option<i64>,
    /// Request header object used for the API test.
    #[serde(rename = "requestHeaders", skip_serializing_if = "Option::is_none")]
    pub request_headers: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// Response body returned for the API test.
    #[serde(rename = "responseBody", skip_serializing_if = "Option::is_none")]
    pub response_body: Option<String>,
    /// Response headers returned for the API test.
    #[serde(rename = "responseHeaders", skip_serializing_if = "Option::is_none")]
    pub response_headers: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// Global size in byte of the API test response.
    #[serde(rename = "responseSize", skip_serializing_if = "Option::is_none")]
    pub response_size: Option<i64>,
    #[serde(rename = "timings", skip_serializing_if = "Option::is_none")]
    pub timings: Option<Box<crate::models::SyntheticsTiming>>,
}

impl SyntheticsApiTestResultData {
    /// Object containing results for your Synthetic API test.
    pub fn new() -> SyntheticsApiTestResultData {
        SyntheticsApiTestResultData {
            cert: None,
            error_code: None,
            error_message: None,
            event_type: None,
            http_status_code: None,
            request_headers: None,
            response_body: None,
            response_headers: None,
            response_size: None,
            timings: None,
        }
    }
}


