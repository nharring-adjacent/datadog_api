/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsCategoryProcessor : Use the Category Processor to add a new attribute (without spaces or special characters in the new attribute name) to a log matching a provided search query. Use categories to create groups for an analytical view. For example, URL groups, machine groups, environments, and response time buckets.  **Notes**:  - The syntax of the query is the one of Logs Explorer search bar.   The query can be done on any log attribute or tag, whether it is a facet or not.   Wildcards can also be used inside your query. - Once the log has matched one of the Processor queries, it stops.   Make sure they are properly ordered in case a log could match several queries. - The names of the categories must be unique. - Once defined in the Category Processor, you can map categories to log status using the Log Status Remapper.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogsCategoryProcessor {
    /// Array of filters to match or not a log and their corresponding `name`to assign a custom value to the log.
    #[serde(rename = "categories")]
    pub categories: Vec<crate::models::LogsCategoryProcessorCategory>,
    /// Whether or not the processor is enabled.
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<bool>,
    /// Name of the processor.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Name of the target attribute which value is defined by the matching category.
    #[serde(rename = "target")]
    pub target: String,
    #[serde(rename = "type")]
    pub _type: crate::models::LogsCategoryProcessorType,
}

impl LogsCategoryProcessor {
    /// Use the Category Processor to add a new attribute (without spaces or special characters in the new attribute name) to a log matching a provided search query. Use categories to create groups for an analytical view. For example, URL groups, machine groups, environments, and response time buckets.  **Notes**:  - The syntax of the query is the one of Logs Explorer search bar.   The query can be done on any log attribute or tag, whether it is a facet or not.   Wildcards can also be used inside your query. - Once the log has matched one of the Processor queries, it stops.   Make sure they are properly ordered in case a log could match several queries. - The names of the categories must be unique. - Once defined in the Category Processor, you can map categories to log status using the Log Status Remapper.
    pub fn new(categories: Vec<crate::models::LogsCategoryProcessorCategory>, target: String, _type: crate::models::LogsCategoryProcessorType) -> LogsCategoryProcessor {
        LogsCategoryProcessor {
            categories,
            is_enabled: None,
            name: None,
            target,
            _type,
        }
    }
}


