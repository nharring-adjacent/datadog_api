/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsListRequest : Object to send with the request to retrieve a list of logs from your Organization.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogsListRequest {
    /// The log index on which the request is performed. For multi-index organizations, the default is all live indexes. Historical indexes of rehydrated logs must be specified.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<String>,
    /// Number of logs return in the response.
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// The search query - following the log search syntax.
    #[serde(rename = "query", skip_serializing_if = "Option::is_none")]
    pub query: Option<String>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<crate::models::LogsSort>,
    /// Hash identifier of the first log to return in the list, available in a log `id` attribute. This parameter is used for the pagination feature.  **Note**: This parameter is ignored if the corresponding log is out of the scope of the specified time window.
    #[serde(rename = "startAt", skip_serializing_if = "Option::is_none")]
    pub start_at: Option<String>,
    #[serde(rename = "time")]
    pub time: Box<crate::models::LogsListRequestTime>,
}

impl LogsListRequest {
    /// Object to send with the request to retrieve a list of logs from your Organization.
    pub fn new(time: crate::models::LogsListRequestTime) -> LogsListRequest {
        LogsListRequest {
            index: None,
            limit: None,
            query: None,
            sort: None,
            start_at: None,
            time: Box::new(time),
        }
    }
}


