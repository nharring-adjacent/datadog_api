/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsStringBuilderProcessor : Use the string builder processor to add a new attribute (without spaces or special characters) to a log with the result of the provided template. This enables aggregation of different attributes or raw strings into a single attribute.  The template is defined by both raw text and blocks with the syntax `%{attribute_path}`.  **Notes**:  - The processor only accepts attributes with values or an array of values in the blocks. - If an attribute cannot be used (object or array of object),   it is replaced by an empty string or the entire operation is skipped depending on your selection. - If the target attribute already exists, it is overwritten by the result of the template. - Results of the template cannot exceed 256 characters.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogsStringBuilderProcessor {
    /// Whether or not the processor is enabled.
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<bool>,
    /// If true, it replaces all missing attributes of `template` by an empty string. If `false` (default), skips the operation for missing attributes.
    #[serde(rename = "is_replace_missing", skip_serializing_if = "Option::is_none")]
    pub is_replace_missing: Option<bool>,
    /// Name of the processor.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The name of the attribute that contains the result of the template.
    #[serde(rename = "target")]
    pub target: String,
    /// A formula with one or more attributes and raw text.
    #[serde(rename = "template")]
    pub template: String,
    #[serde(rename = "type")]
    pub _type: crate::models::LogsStringBuilderProcessorType,
}

impl LogsStringBuilderProcessor {
    /// Use the string builder processor to add a new attribute (without spaces or special characters) to a log with the result of the provided template. This enables aggregation of different attributes or raw strings into a single attribute.  The template is defined by both raw text and blocks with the syntax `%{attribute_path}`.  **Notes**:  - The processor only accepts attributes with values or an array of values in the blocks. - If an attribute cannot be used (object or array of object),   it is replaced by an empty string or the entire operation is skipped depending on your selection. - If the target attribute already exists, it is overwritten by the result of the template. - Results of the template cannot exceed 256 characters.
    pub fn new(target: String, template: String, _type: crate::models::LogsStringBuilderProcessorType) -> LogsStringBuilderProcessor {
        LogsStringBuilderProcessor {
            is_enabled: None,
            is_replace_missing: None,
            name: None,
            target,
            template,
            _type,
        }
    }
}


