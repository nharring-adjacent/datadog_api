/*
 * Datadog API V1 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// MonitorStateGroup : Monitor state for a single group.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MonitorStateGroup {
    /// Latest timestamp the monitor was in NO_DATA state.
    #[serde(rename = "last_nodata_ts", skip_serializing_if = "Option::is_none")]
    pub last_nodata_ts: Option<i64>,
    /// Latest timestamp of the notification sent for this monitor group.
    #[serde(rename = "last_notified_ts", skip_serializing_if = "Option::is_none")]
    pub last_notified_ts: Option<i64>,
    /// Latest timestamp the monitor group was resolved.
    #[serde(rename = "last_resolved_ts", skip_serializing_if = "Option::is_none")]
    pub last_resolved_ts: Option<i64>,
    /// Latest timestamp the monitor group triggered.
    #[serde(rename = "last_triggered_ts", skip_serializing_if = "Option::is_none")]
    pub last_triggered_ts: Option<i64>,
    /// The name of the monitor.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::MonitorOverallStates>,
}

impl MonitorStateGroup {
    /// Monitor state for a single group.
    pub fn new() -> MonitorStateGroup {
        MonitorStateGroup {
            last_nodata_ts: None,
            last_notified_ts: None,
            last_resolved_ts: None,
            last_triggered_ts: None,
            name: None,
            status: None,
        }
    }
}


